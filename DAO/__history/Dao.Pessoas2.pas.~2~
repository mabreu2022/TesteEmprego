unit Dao.Pessoas2;

interface

uses
  System.SysUtils,
  System.Classes,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Error,
  FireDAC.UI.Intf,
  FireDAC.Phys.Intf,
  FireDAC.Stan.Def,
  FireDAC.Stan.Pool,
  FireDAC.Stan.Async,
  FireDAC.Phys,
  FireDAC.Phys.PG,
  FireDAC.Phys.PGDef,
  FireDAC.VCLUI.Wait,
  Data.DB,
  FireDAC.Comp.Client,
  DAO.Conexao,
  Vcl.Dialogs,
  Dao.Pessoas;

type
  TIncluir = class
  private
    FConn    : TFDConnection;
    FPessoa  : TPessoa;
    FDataSet : TDataSource;
    FQuery   : TFDQuery;

  public
     function PesquisaId(aTabela: String; aId: String): Integer;
     function PesquisaIdEndereco(aTabela: string; aIdEndereco: string): Integer;
     function Inserir(aPessoa: TPessoa): Boolean;

     constructor Create;
     destructor Destroy; override;
  end;

type
  TUpdate = class
    private
      FQuery: TFDQuery;
      FConn: TFDConnection;
      FPessoa: TPessoa;
    public
      function Alterar(aPessoa: TPessoa): Boolean;
      constructor Create;
      destructor Destroy; override;
  end;

implementation

{ TIncluir }

constructor TIncluir.Create;
begin
  FConn             := TConnection.CreateConnection;
  FPessoa           := TPessoa.Create;
  FQuery            := TFDQuery.Create(nil);
  FQuery.Connection := FConn;
end;

destructor TIncluir.Destroy;
begin
  if Assigned(FConn) then
    Fconn.Free;
  FQuery.DisposeOf;
  inherited;
end;

function TIncluir.Inserir(aPessoa: TPessoa): Boolean;
begin

end;

function TIncluir.PesquisaId(aTabela, aId: String): Integer;
begin

end;

function TIncluir.PesquisaIdEndereco(aTabela, aIdEndereco: string): Integer;
begin

end;

{ TUpdate }

function TUpdate.Alterar(aPessoa: TPessoa): Boolean;
begin

  Result:= True;

  try
    FQuery.Active := False;
    FQuery.SQL.Clear;
    FQuery.SQL.Add('UPDATE PESSOA SET NOME=:NOME, DOCUMENTO=:DOCUMENTO, CEP=:CEP, LOGRADOURO=:LOGRADOURO, NUMERO=:NUMERO, COMPLEMENTO=:COMPLEMENTO, BAIRRO=:BAIRRO, CIDADE=:CIDADE, UF=:UF, DTREGISTRO=:DTREGISTRO');
    FQuery.SQL.Add('WHERE IDPESSOAS =:IDPESSOAS');
    FQuery.ParamByName('NOME').Value        := aPessoa.nmprimeiro;
    FQuery.ParamByName('DOCUMENTO').Value   := aPessoa.dsdocumento;
    FQuery.ParamByName('CEP').Value         := aPessoa.CEP;
    FQuery.ParamByName('LOGRADOURO').Value  := aPessoa.Logradouro;
    FQuery.ParamByName('NUMERO').Value      := aPessoa.Numero;
    FQuery.ParamByName('COMPLEMENTO').Value := aPessoa.Complemento;
    FQuery.ParamByName('BAIRRO').Value      := aPessoa.Bairro;
    FQuery.ParamByName('CIDADE').Value      := aPessoa.Cidade;
    FQuery.ParamByName('UF').Value          := aPessoa.UF;
    FQuery.ParamByName('DTREGISTRO').Value  := aPessoa.dtregistro;

    FQuery.ParamByName('IDPESSOAS').Value   := aPessoa.idpessoa;
    FQuery.ExecSQL;


  except on ex:exception do
    begin
      raise Exception.Create('Error ao deletar na tabela endereco' + ex.Message);
      Result := False;
    end;

  end;

end;

constructor TUpdate.Create;
begin

end;

destructor TUpdate.Destroy;
begin

  inherited;
end;

end.
